/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/affix/basic': RouteRecordInfo<'/affix/basic', '/affix/basic', Record<never, never>, Record<never, never>>,
    '/affix/change': RouteRecordInfo<'/affix/change', '/affix/change', Record<never, never>, Record<never, never>>,
    '/affix/target': RouteRecordInfo<'/affix/target', '/affix/target', Record<never, never>, Record<never, never>>,
    '/alert/action': RouteRecordInfo<'/alert/action', '/alert/action', Record<never, never>, Record<never, never>>,
    '/alert/banner': RouteRecordInfo<'/alert/banner', '/alert/banner', Record<never, never>, Record<never, never>>,
    '/alert/basic': RouteRecordInfo<'/alert/basic', '/alert/basic', Record<never, never>, Record<never, never>>,
    '/alert/close': RouteRecordInfo<'/alert/close', '/alert/close', Record<never, never>, Record<never, never>>,
    '/alert/description': RouteRecordInfo<'/alert/description', '/alert/description', Record<never, never>, Record<never, never>>,
    '/alert/error': RouteRecordInfo<'/alert/error', '/alert/error', Record<never, never>, Record<never, never>>,
    '/alert/icon': RouteRecordInfo<'/alert/icon', '/alert/icon', Record<never, never>, Record<never, never>>,
    '/alert/styles': RouteRecordInfo<'/alert/styles', '/alert/styles', Record<never, never>, Record<never, never>>,
    '/anchor/basic': RouteRecordInfo<'/anchor/basic', '/anchor/basic', Record<never, never>, Record<never, never>>,
    '/anchor/customize-highlight': RouteRecordInfo<'/anchor/customize-highlight', '/anchor/customize-highlight', Record<never, never>, Record<never, never>>,
    '/anchor/horizontal': RouteRecordInfo<'/anchor/horizontal', '/anchor/horizontal', Record<never, never>, Record<never, never>>,
    '/anchor/onChange': RouteRecordInfo<'/anchor/onChange', '/anchor/onChange', Record<never, never>, Record<never, never>>,
    '/anchor/onClick': RouteRecordInfo<'/anchor/onClick', '/anchor/onClick', Record<never, never>, Record<never, never>>,
    '/anchor/replace': RouteRecordInfo<'/anchor/replace', '/anchor/replace', Record<never, never>, Record<never, never>>,
    '/anchor/static': RouteRecordInfo<'/anchor/static', '/anchor/static', Record<never, never>, Record<never, never>>,
    '/anchor/target-offset': RouteRecordInfo<'/anchor/target-offset', '/anchor/target-offset', Record<never, never>, Record<never, never>>,
    '/button/auto-insert-space': RouteRecordInfo<'/button/auto-insert-space', '/button/auto-insert-space', Record<never, never>, Record<never, never>>,
    '/button/basic': RouteRecordInfo<'/button/basic', '/button/basic', Record<never, never>, Record<never, never>>,
    '/button/block': RouteRecordInfo<'/button/block', '/button/block', Record<never, never>, Record<never, never>>,
    '/button/danger': RouteRecordInfo<'/button/danger', '/button/danger', Record<never, never>, Record<never, never>>,
    '/button/disabled': RouteRecordInfo<'/button/disabled', '/button/disabled', Record<never, never>, Record<never, never>>,
    '/button/ghost': RouteRecordInfo<'/button/ghost', '/button/ghost', Record<never, never>, Record<never, never>>,
    '/button/icon': RouteRecordInfo<'/button/icon', '/button/icon', Record<never, never>, Record<never, never>>,
    '/button/icon-position': RouteRecordInfo<'/button/icon-position', '/button/icon-position', Record<never, never>, Record<never, never>>,
    '/button/loading': RouteRecordInfo<'/button/loading', '/button/loading', Record<never, never>, Record<never, never>>,
    '/button/size': RouteRecordInfo<'/button/size', '/button/size', Record<never, never>, Record<never, never>>,
    '/button/variant': RouteRecordInfo<'/button/variant', '/button/variant', Record<never, never>, Record<never, never>>,
    '/divider/basic': RouteRecordInfo<'/divider/basic', '/divider/basic', Record<never, never>, Record<never, never>>,
    '/divider/customize-style': RouteRecordInfo<'/divider/customize-style', '/divider/customize-style', Record<never, never>, Record<never, never>>,
    '/divider/horizontal': RouteRecordInfo<'/divider/horizontal', '/divider/horizontal', Record<never, never>, Record<never, never>>,
    '/divider/plain': RouteRecordInfo<'/divider/plain', '/divider/plain', Record<never, never>, Record<never, never>>,
    '/divider/size': RouteRecordInfo<'/divider/size', '/divider/size', Record<never, never>, Record<never, never>>,
    '/divider/variant': RouteRecordInfo<'/divider/variant', '/divider/variant', Record<never, never>, Record<never, never>>,
    '/divider/vertical': RouteRecordInfo<'/divider/vertical', '/divider/vertical', Record<never, never>, Record<never, never>>,
    '/divider/with-text': RouteRecordInfo<'/divider/with-text', '/divider/with-text', Record<never, never>, Record<never, never>>,
    '/flex/basic': RouteRecordInfo<'/flex/basic', '/flex/basic', Record<never, never>, Record<never, never>>,
    '/popconfirm/basic': RouteRecordInfo<'/popconfirm/basic', '/popconfirm/basic', Record<never, never>, Record<never, never>>,
    '/popconfirm/dynamic-trigger': RouteRecordInfo<'/popconfirm/dynamic-trigger', '/popconfirm/dynamic-trigger', Record<never, never>, Record<never, never>>,
    '/popconfirm/icon': RouteRecordInfo<'/popconfirm/icon', '/popconfirm/icon', Record<never, never>, Record<never, never>>,
    '/popconfirm/placement': RouteRecordInfo<'/popconfirm/placement', '/popconfirm/placement', Record<never, never>, Record<never, never>>,
    '/popconfirm/promise': RouteRecordInfo<'/popconfirm/promise', '/popconfirm/promise', Record<never, never>, Record<never, never>>,
    '/popover/basic': RouteRecordInfo<'/popover/basic', '/popover/basic', Record<never, never>, Record<never, never>>,
    '/popover/control': RouteRecordInfo<'/popover/control', '/popover/control', Record<never, never>, Record<never, never>>,
    '/popover/placement': RouteRecordInfo<'/popover/placement', '/popover/placement', Record<never, never>, Record<never, never>>,
    '/popover/shift': RouteRecordInfo<'/popover/shift', '/popover/shift', Record<never, never>, Record<never, never>>,
    '/popover/triggerType': RouteRecordInfo<'/popover/triggerType', '/popover/triggerType', Record<never, never>, Record<never, never>>,
    '/qrcode/base': RouteRecordInfo<'/qrcode/base', '/qrcode/base', Record<never, never>, Record<never, never>>,
    '/qrcode/basic': RouteRecordInfo<'/qrcode/basic', '/qrcode/basic', Record<never, never>, Record<never, never>>,
    '/qrcode/customColor': RouteRecordInfo<'/qrcode/customColor', '/qrcode/customColor', Record<never, never>, Record<never, never>>,
    '/qrcode/customSize': RouteRecordInfo<'/qrcode/customSize', '/qrcode/customSize', Record<never, never>, Record<never, never>>,
    '/qrcode/customStatusRender': RouteRecordInfo<'/qrcode/customStatusRender', '/qrcode/customStatusRender', Record<never, never>, Record<never, never>>,
    '/qrcode/download': RouteRecordInfo<'/qrcode/download', '/qrcode/download', Record<never, never>, Record<never, never>>,
    '/qrcode/errorLevel': RouteRecordInfo<'/qrcode/errorLevel', '/qrcode/errorLevel', Record<never, never>, Record<never, never>>,
    '/qrcode/icon': RouteRecordInfo<'/qrcode/icon', '/qrcode/icon', Record<never, never>, Record<never, never>>,
    '/qrcode/status': RouteRecordInfo<'/qrcode/status', '/qrcode/status', Record<never, never>, Record<never, never>>,
    '/qrcode/type': RouteRecordInfo<'/qrcode/type', '/qrcode/type', Record<never, never>, Record<never, never>>,
    '/slider/basic': RouteRecordInfo<'/slider/basic', '/slider/basic', Record<never, never>, Record<never, never>>,
    '/slider/draggableTrack': RouteRecordInfo<'/slider/draggableTrack', '/slider/draggableTrack', Record<never, never>, Record<never, never>>,
    '/slider/editable': RouteRecordInfo<'/slider/editable', '/slider/editable', Record<never, never>, Record<never, never>>,
    '/slider/event': RouteRecordInfo<'/slider/event', '/slider/event', Record<never, never>, Record<never, never>>,
    '/slider/icon-slider': RouteRecordInfo<'/slider/icon-slider', '/slider/icon-slider', Record<never, never>, Record<never, never>>,
    '/slider/marks': RouteRecordInfo<'/slider/marks', '/slider/marks', Record<never, never>, Record<never, never>>,
    '/slider/mulitiple': RouteRecordInfo<'/slider/mulitiple', '/slider/mulitiple', Record<never, never>, Record<never, never>>,
    '/slider/reverse': RouteRecordInfo<'/slider/reverse', '/slider/reverse', Record<never, never>, Record<never, never>>,
    '/slider/show-tooltip': RouteRecordInfo<'/slider/show-tooltip', '/slider/show-tooltip', Record<never, never>, Record<never, never>>,
    '/slider/tip-formatter': RouteRecordInfo<'/slider/tip-formatter', '/slider/tip-formatter', Record<never, never>, Record<never, never>>,
    '/slider/vertical': RouteRecordInfo<'/slider/vertical', '/slider/vertical', Record<never, never>, Record<never, never>>,
    '/space/': RouteRecordInfo<'/space/', '/space', Record<never, never>, Record<never, never>>,
    '/space/align': RouteRecordInfo<'/space/align', '/space/align', Record<never, never>, Record<never, never>>,
    '/space/base': RouteRecordInfo<'/space/base', '/space/base', Record<never, never>, Record<never, never>>,
    '/space/compact': RouteRecordInfo<'/space/compact', '/space/compact', Record<never, never>, Record<never, never>>,
    '/space/compact-button-vertical': RouteRecordInfo<'/space/compact-button-vertical', '/space/compact-button-vertical', Record<never, never>, Record<never, never>>,
    '/space/compact-buttons': RouteRecordInfo<'/space/compact-buttons', '/space/compact-buttons', Record<never, never>, Record<never, never>>,
    '/space/customize': RouteRecordInfo<'/space/customize', '/space/customize', Record<never, never>, Record<never, never>>,
    '/space/size': RouteRecordInfo<'/space/size', '/space/size', Record<never, never>, Record<never, never>>,
    '/space/split': RouteRecordInfo<'/space/split', '/space/split', Record<never, never>, Record<never, never>>,
    '/space/vertical': RouteRecordInfo<'/space/vertical', '/space/vertical', Record<never, never>, Record<never, never>>,
    '/space/wrap': RouteRecordInfo<'/space/wrap', '/space/wrap', Record<never, never>, Record<never, never>>,
    '/spin/': RouteRecordInfo<'/spin/', '/spin', Record<never, never>, Record<never, never>>,
    '/spin/basic': RouteRecordInfo<'/spin/basic', '/spin/basic', Record<never, never>, Record<never, never>>,
    '/spin/custom-indicator': RouteRecordInfo<'/spin/custom-indicator', '/spin/custom-indicator', Record<never, never>, Record<never, never>>,
    '/spin/delay': RouteRecordInfo<'/spin/delay', '/spin/delay', Record<never, never>, Record<never, never>>,
    '/spin/inside': RouteRecordInfo<'/spin/inside', '/spin/inside', Record<never, never>, Record<never, never>>,
    '/spin/nested': RouteRecordInfo<'/spin/nested', '/spin/nested', Record<never, never>, Record<never, never>>,
    '/spin/size': RouteRecordInfo<'/spin/size', '/spin/size', Record<never, never>, Record<never, never>>,
    '/spin/tip': RouteRecordInfo<'/spin/tip', '/spin/tip', Record<never, never>, Record<never, never>>,
    '/tooltip/basic': RouteRecordInfo<'/tooltip/basic', '/tooltip/basic', Record<never, never>, Record<never, never>>,
    '/tooltip/colorful': RouteRecordInfo<'/tooltip/colorful', '/tooltip/colorful', Record<never, never>, Record<never, never>>,
    '/tooltip/placement': RouteRecordInfo<'/tooltip/placement', '/tooltip/placement', Record<never, never>, Record<never, never>>,
    '/tooltip/shift': RouteRecordInfo<'/tooltip/shift', '/tooltip/shift', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/affix/basic.vue': {
      routes: '/affix/basic'
      views: never
    }
    'src/pages/affix/change.vue': {
      routes: '/affix/change'
      views: never
    }
    'src/pages/affix/target.vue': {
      routes: '/affix/target'
      views: never
    }
    'src/pages/alert/action.vue': {
      routes: '/alert/action'
      views: never
    }
    'src/pages/alert/banner.vue': {
      routes: '/alert/banner'
      views: never
    }
    'src/pages/alert/basic.vue': {
      routes: '/alert/basic'
      views: never
    }
    'src/pages/alert/close.vue': {
      routes: '/alert/close'
      views: never
    }
    'src/pages/alert/description.vue': {
      routes: '/alert/description'
      views: never
    }
    'src/pages/alert/error.vue': {
      routes: '/alert/error'
      views: never
    }
    'src/pages/alert/icon.vue': {
      routes: '/alert/icon'
      views: never
    }
    'src/pages/alert/styles.vue': {
      routes: '/alert/styles'
      views: never
    }
    'src/pages/anchor/basic.vue': {
      routes: '/anchor/basic'
      views: never
    }
    'src/pages/anchor/customize-highlight.vue': {
      routes: '/anchor/customize-highlight'
      views: never
    }
    'src/pages/anchor/horizontal.vue': {
      routes: '/anchor/horizontal'
      views: never
    }
    'src/pages/anchor/onChange.vue': {
      routes: '/anchor/onChange'
      views: never
    }
    'src/pages/anchor/onClick.vue': {
      routes: '/anchor/onClick'
      views: never
    }
    'src/pages/anchor/replace.vue': {
      routes: '/anchor/replace'
      views: never
    }
    'src/pages/anchor/static.vue': {
      routes: '/anchor/static'
      views: never
    }
    'src/pages/anchor/target-offset.vue': {
      routes: '/anchor/target-offset'
      views: never
    }
    'src/pages/button/auto-insert-space.vue': {
      routes: '/button/auto-insert-space'
      views: never
    }
    'src/pages/button/basic.vue': {
      routes: '/button/basic'
      views: never
    }
    'src/pages/button/block.vue': {
      routes: '/button/block'
      views: never
    }
    'src/pages/button/danger.vue': {
      routes: '/button/danger'
      views: never
    }
    'src/pages/button/disabled.vue': {
      routes: '/button/disabled'
      views: never
    }
    'src/pages/button/ghost.vue': {
      routes: '/button/ghost'
      views: never
    }
    'src/pages/button/icon.vue': {
      routes: '/button/icon'
      views: never
    }
    'src/pages/button/icon-position.vue': {
      routes: '/button/icon-position'
      views: never
    }
    'src/pages/button/loading.vue': {
      routes: '/button/loading'
      views: never
    }
    'src/pages/button/size.vue': {
      routes: '/button/size'
      views: never
    }
    'src/pages/button/variant.vue': {
      routes: '/button/variant'
      views: never
    }
    'src/pages/divider/basic.vue': {
      routes: '/divider/basic'
      views: never
    }
    'src/pages/divider/customize-style.vue': {
      routes: '/divider/customize-style'
      views: never
    }
    'src/pages/divider/horizontal.vue': {
      routes: '/divider/horizontal'
      views: never
    }
    'src/pages/divider/plain.vue': {
      routes: '/divider/plain'
      views: never
    }
    'src/pages/divider/size.vue': {
      routes: '/divider/size'
      views: never
    }
    'src/pages/divider/variant.vue': {
      routes: '/divider/variant'
      views: never
    }
    'src/pages/divider/vertical.vue': {
      routes: '/divider/vertical'
      views: never
    }
    'src/pages/divider/with-text.vue': {
      routes: '/divider/with-text'
      views: never
    }
    'src/pages/flex/basic.vue': {
      routes: '/flex/basic'
      views: never
    }
    'src/pages/popconfirm/basic.vue': {
      routes: '/popconfirm/basic'
      views: never
    }
    'src/pages/popconfirm/dynamic-trigger.vue': {
      routes: '/popconfirm/dynamic-trigger'
      views: never
    }
    'src/pages/popconfirm/icon.vue': {
      routes: '/popconfirm/icon'
      views: never
    }
    'src/pages/popconfirm/placement.vue': {
      routes: '/popconfirm/placement'
      views: never
    }
    'src/pages/popconfirm/promise.vue': {
      routes: '/popconfirm/promise'
      views: never
    }
    'src/pages/popover/basic.vue': {
      routes: '/popover/basic'
      views: never
    }
    'src/pages/popover/control.vue': {
      routes: '/popover/control'
      views: never
    }
    'src/pages/popover/placement.vue': {
      routes: '/popover/placement'
      views: never
    }
    'src/pages/popover/shift.vue': {
      routes: '/popover/shift'
      views: never
    }
    'src/pages/popover/triggerType.vue': {
      routes: '/popover/triggerType'
      views: never
    }
    'src/pages/qrcode/base.vue': {
      routes: '/qrcode/base'
      views: never
    }
    'src/pages/qrcode/basic.vue': {
      routes: '/qrcode/basic'
      views: never
    }
    'src/pages/qrcode/customColor.vue': {
      routes: '/qrcode/customColor'
      views: never
    }
    'src/pages/qrcode/customSize.vue': {
      routes: '/qrcode/customSize'
      views: never
    }
    'src/pages/qrcode/customStatusRender.vue': {
      routes: '/qrcode/customStatusRender'
      views: never
    }
    'src/pages/qrcode/download.vue': {
      routes: '/qrcode/download'
      views: never
    }
    'src/pages/qrcode/errorLevel.vue': {
      routes: '/qrcode/errorLevel'
      views: never
    }
    'src/pages/qrcode/icon.vue': {
      routes: '/qrcode/icon'
      views: never
    }
    'src/pages/qrcode/status.vue': {
      routes: '/qrcode/status'
      views: never
    }
    'src/pages/qrcode/type.vue': {
      routes: '/qrcode/type'
      views: never
    }
    'src/pages/slider/basic.vue': {
      routes: '/slider/basic'
      views: never
    }
    'src/pages/slider/draggableTrack.vue': {
      routes: '/slider/draggableTrack'
      views: never
    }
    'src/pages/slider/editable.vue': {
      routes: '/slider/editable'
      views: never
    }
    'src/pages/slider/event.vue': {
      routes: '/slider/event'
      views: never
    }
    'src/pages/slider/icon-slider.vue': {
      routes: '/slider/icon-slider'
      views: never
    }
    'src/pages/slider/marks.vue': {
      routes: '/slider/marks'
      views: never
    }
    'src/pages/slider/mulitiple.vue': {
      routes: '/slider/mulitiple'
      views: never
    }
    'src/pages/slider/reverse.vue': {
      routes: '/slider/reverse'
      views: never
    }
    'src/pages/slider/show-tooltip.vue': {
      routes: '/slider/show-tooltip'
      views: never
    }
    'src/pages/slider/tip-formatter.vue': {
      routes: '/slider/tip-formatter'
      views: never
    }
    'src/pages/slider/vertical.vue': {
      routes: '/slider/vertical'
      views: never
    }
    'src/pages/space/index.vue': {
      routes: '/space/'
      views: never
    }
    'src/pages/space/align.vue': {
      routes: '/space/align'
      views: never
    }
    'src/pages/space/base.vue': {
      routes: '/space/base'
      views: never
    }
    'src/pages/space/compact.vue': {
      routes: '/space/compact'
      views: never
    }
    'src/pages/space/compact-button-vertical.vue': {
      routes: '/space/compact-button-vertical'
      views: never
    }
    'src/pages/space/compact-buttons.vue': {
      routes: '/space/compact-buttons'
      views: never
    }
    'src/pages/space/customize.vue': {
      routes: '/space/customize'
      views: never
    }
    'src/pages/space/size.vue': {
      routes: '/space/size'
      views: never
    }
    'src/pages/space/split.vue': {
      routes: '/space/split'
      views: never
    }
    'src/pages/space/vertical.vue': {
      routes: '/space/vertical'
      views: never
    }
    'src/pages/space/wrap.vue': {
      routes: '/space/wrap'
      views: never
    }
    'src/pages/spin/index.vue': {
      routes: '/spin/'
      views: never
    }
    'src/pages/spin/basic.vue': {
      routes: '/spin/basic'
      views: never
    }
    'src/pages/spin/custom-indicator.vue': {
      routes: '/spin/custom-indicator'
      views: never
    }
    'src/pages/spin/delay.vue': {
      routes: '/spin/delay'
      views: never
    }
    'src/pages/spin/inside.vue': {
      routes: '/spin/inside'
      views: never
    }
    'src/pages/spin/nested.vue': {
      routes: '/spin/nested'
      views: never
    }
    'src/pages/spin/size.vue': {
      routes: '/spin/size'
      views: never
    }
    'src/pages/spin/tip.vue': {
      routes: '/spin/tip'
      views: never
    }
    'src/pages/tooltip/basic.vue': {
      routes: '/tooltip/basic'
      views: never
    }
    'src/pages/tooltip/colorful.vue': {
      routes: '/tooltip/colorful'
      views: never
    }
    'src/pages/tooltip/placement.vue': {
      routes: '/tooltip/placement'
      views: never
    }
    'src/pages/tooltip/shift.vue': {
      routes: '/tooltip/shift'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
